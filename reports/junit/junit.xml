<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="29" failures="0" errors="0" time="3.995">
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="2.946" tests="1">
    <testcase classname=" basic test" name=" basic test" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="API functions" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="2.978" tests="3">
    <testcase classname="API functions GrammarRequest should return a mistake and correct question" name="API functions GrammarRequest should return a mistake and correct question" time="0.041">
    </testcase>
    <testcase classname="API functions OpenQuestionsRequest should return a paragraph, question, answers, and correctAnswer" name="API functions OpenQuestionsRequest should return a paragraph, question, answers, and correctAnswer" time="0">
    </testcase>
    <testcase classname="API functions vocabularyRequest should return words and their translations" name="API functions vocabularyRequest should return words and their translations" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="login" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="3.031" tests="3">
    <testcase classname="login should login a user successfully and redirect based on role" name="login should login a user successfully and redirect based on role" time="0.009">
    </testcase>
    <testcase classname="login should return error for invalid fields" name="login should return error for invalid fields" time="0.001">
    </testcase>
    <testcase classname="login should return error for non-existing user" name="login should return error for non-existing user" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ServerActions Integration Tests" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="3.072" tests="3">
    <testcase classname="ServerActions Integration Tests studentStats should return student answers if userId is provided" name="ServerActions Integration Tests studentStats should return student answers if userId is provided" time="0.019">
    </testcase>
    <testcase classname="ServerActions Integration Tests studentStats should handle errors gracefully" name="ServerActions Integration Tests studentStats should handle errors gracefully" time="0.002">
    </testcase>
    <testcase classname="ServerActions Integration Tests getAllStudentsByTeacher should return all students and their combined answers for a teacher" name="ServerActions Integration Tests getAllStudentsByTeacher should return all students and their combined answers for a teacher" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="reset function" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="3.115" tests="2">
    <testcase classname="reset function should return an error for invalid email format" name="reset function should return an error for invalid email format" time="0.003">
    </testcase>
    <testcase classname="reset function should return an error if email does not exist in the system" name="reset function should return an error if email does not exist in the system" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="register" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="3.122" tests="1">
    <testcase classname="register should register a user successfully" name="register should register a user successfully" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Login Integration Tests" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="3.219" tests="3">
    <testcase classname="Login Integration Tests should login a user successfully and redirect based on role" name="Login Integration Tests should login a user successfully and redirect based on role" time="0.009">
    </testcase>
    <testcase classname="Login Integration Tests should return error for invalid fields" name="Login Integration Tests should return error for invalid fields" time="0.002">
    </testcase>
    <testcase classname="Login Integration Tests should return error for non-existing user" name="Login Integration Tests should return error for non-existing user" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ServerActions" errors="0" failures="0" skipped="0" timestamp="2024-08-18T17:06:00" time="3.844" tests="13">
    <testcase classname="ServerActions getAllTeachersNameAndID should return all teachers" name="ServerActions getAllTeachersNameAndID should return all teachers" time="0.002">
    </testcase>
    <testcase classname="ServerActions getAllTeachersNameAndID should handle errors gracefully" name="ServerActions getAllTeachersNameAndID should handle errors gracefully" time="0.001">
    </testcase>
    <testcase classname="ServerActions NumberOfTeachersWaitingApproval should return the number of teachers waiting for approval" name="ServerActions NumberOfTeachersWaitingApproval should return the number of teachers waiting for approval" time="0">
    </testcase>
    <testcase classname="ServerActions NumberOfTeachersWaitingApproval should handle errors gracefully" name="ServerActions NumberOfTeachersWaitingApproval should handle errors gracefully" time="0">
    </testcase>
    <testcase classname="ServerActions ApproveTeacher should update the teacher&apos;s role to TEACHER" name="ServerActions ApproveTeacher should update the teacher&apos;s role to TEACHER" time="0">
    </testcase>
    <testcase classname="ServerActions ApproveTeacher should handle errors gracefully" name="ServerActions ApproveTeacher should handle errors gracefully" time="0.001">
    </testcase>
    <testcase classname="ServerActions NumberOfTaskToDo should return the number of tasks to do for the student" name="ServerActions NumberOfTaskToDo should return the number of tasks to do for the student" time="0">
    </testcase>
    <testcase classname="ServerActions NumberOfTaskToDo should throw an error if userId is not provided" name="ServerActions NumberOfTaskToDo should throw an error if userId is not provided" time="0.009">
    </testcase>
    <testcase classname="ServerActions NumberOfTaskToDo should handle errors gracefully" name="ServerActions NumberOfTaskToDo should handle errors gracefully" time="0.001">
    </testcase>
    <testcase classname="ServerActions DeleteUser should delete the user by id" name="ServerActions DeleteUser should delete the user by id" time="0">
    </testcase>
    <testcase classname="ServerActions DeleteUser should handle errors gracefully" name="ServerActions DeleteUser should handle errors gracefully" time="0">
    </testcase>
    <testcase classname="ServerActions getTeachersWaitingApproval should return teachers waiting for approval" name="ServerActions getTeachersWaitingApproval should return teachers waiting for approval" time="0">
    </testcase>
    <testcase classname="ServerActions getTeachersWaitingApproval should handle errors gracefully" name="ServerActions getTeachersWaitingApproval should handle errors gracefully" time="0">
    </testcase>
  </testsuite>
</testsuites>